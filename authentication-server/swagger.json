{
  "swagger": "2.0",
  "info": {
    "description": "This is an auth demo app",
    "version": "1.0.0",
    "title": "Auth Server"
  },
  "tags": [
    {
      "name": "AuthServer",
      "description": "Authentication Service"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "user register api",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "409": {
            "description": "User Already Exist. Please Login",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "500": {
            "description": "Server encountered an error",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/loginResponse"
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user",
        "description": "Logged in user can initiate a logout, expecting refresh token in header",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "400": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/token": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get new access token",
        "description": "Request a new token with empty body, expecting refresh token in header",
        "operationId": "refreshToken",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/accessTokenResponse"
            }
          },
          "401": {
            "description": "Invalid token supplied",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "403": {
            "description": "Unauthorised access",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ResponseObj"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "firstName",
        "lastName",
        "email",
        "password"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Abhilash"
        },
        "lastName": {
          "type": "string",
          "example": "Sivan"
        },
        "email": {
          "type": "string",
          "example": "abhi@test.com"
        },
        "password": {
          "type": "string",
          "example": "abhilash123"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "loginUser": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "description": "unique identifier of user",
          "example": "abhi@test.com"
        },
        "password": {
          "type": "string",
          "description": "password of user",
          "example": "abhilash123"
        }
      }
    },
    "ResponseObj": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Response message"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "accessTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "This is your new access token"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}